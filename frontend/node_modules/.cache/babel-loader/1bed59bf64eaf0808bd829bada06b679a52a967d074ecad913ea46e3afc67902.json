{"ast":null,"code":"var fs = require('fs');\nvar path = require('path');\nfunction merge(target, source) {\n  for (var x in source) {\n    if (!target.hasOwnProperty(x)) target[x] = source[x];\n  }\n}\nfunction handleError(options, callback, err) {\n  options.stop = true;\n  callback(err);\n}\nfunction walk(dir, options, iterator, callback) {\n  if (options.stop) return;\n  fs.readdir(dir, function (err, contents) {\n    if (options.stop) return;\n    if (err) return handleError(options, callback, err);\n    var numItems = contents.length;\n    contents.forEach(function (name) {\n      var item = path.join(dir, name);\n      fs.stat(item, function (err, stats) {\n        if (options.stop) return;\n        if (err) return handleError(options, callback, err);\n        var ret = iterator(item, stats);\n        if (typeof ret === 'boolean' && ret === false) {\n          options.stop = true;\n          return callback();\n        }\n        if (stats.isDirectory() && options.recursive) {\n          return walk(item, options, iterator, function (err) {\n            if (options.stop) return;\n            if (err) return handleError(options, callback, err);\n            if (--numItems === 0) {\n              callback();\n            }\n          });\n        }\n        if (--numItems === 0) {\n          callback();\n        }\n      });\n    });\n  });\n}\nmodule.exports = function (dir, options, iterator, callback) {\n  if (arguments.length === 3) {\n    callback = iterator;\n    iterator = options;\n    options = {};\n  }\n  merge(options, {\n    recursive: true,\n    stop: false\n  });\n  walk(dir, options, iterator, callback);\n};","map":{"version":3,"names":["fs","require","path","merge","target","source","x","hasOwnProperty","handleError","options","callback","err","stop","walk","dir","iterator","readdir","contents","numItems","length","forEach","name","item","join","stat","stats","ret","isDirectory","recursive","module","exports","arguments"],"sources":["C:/game/mern/node_modules/walk-fs/index.js"],"sourcesContent":["var fs = require('fs');\nvar path = require('path');\n\n\nfunction merge(target, source) {\n  for (var x in source) {\n    if (!target.hasOwnProperty(x)) target[x] = source[x];\n  }\n}\n\n\nfunction handleError(options, callback, err) {\n  options.stop = true;\n  callback(err);\n}\n\n\nfunction walk(dir, options, iterator, callback) {\n  if (options.stop) return;\n  \n  fs.readdir(dir, function(err, contents) {\n    if (options.stop) return;\n    if (err) return handleError(options, callback, err);\n    \n    var numItems = contents.length;\n    \n    contents.forEach(function(name) {\n\n      var item = path.join(dir, name);\n      \n      fs.stat(item, function(err, stats) {\n        if (options.stop) return;\n        if (err) return handleError(options, callback, err);\n        \n        var ret = iterator(item, stats);\n        if (typeof ret === 'boolean' && ret === false) {\n          options.stop = true;\n          return callback();\n        }\n\n        if (stats.isDirectory() && options.recursive) {\n\n          return walk(item, options, iterator, function(err) {\n            if (options.stop) return;\n            if (err) return handleError(options, callback, err);\n            \n            if (--numItems === 0) {\n              callback();\n            }\n          });\n        }\n        if (--numItems === 0) {\n          callback();\n        }\n      });\n    });\n  });\n}\n\n\nmodule.exports = function(dir, options, iterator, callback) {\n\n  if (arguments.length === 3) {\n    callback = iterator;\n    iterator = options;\n    options = {};\n  }\n  \n  merge(options, {\n    recursive: true,\n    stop: false\n  });\n\n  walk(dir, options, iterator, callback);\n};\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAG1B,SAASE,KAAKA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC7B,KAAK,IAAIC,CAAC,IAAID,MAAM,EAAE;IACpB,IAAI,CAACD,MAAM,CAACG,cAAc,CAACD,CAAC,CAAC,EAAEF,MAAM,CAACE,CAAC,CAAC,GAAGD,MAAM,CAACC,CAAC,CAAC;EACtD;AACF;AAGA,SAASE,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,GAAG,EAAE;EAC3CF,OAAO,CAACG,IAAI,GAAG,IAAI;EACnBF,QAAQ,CAACC,GAAG,CAAC;AACf;AAGA,SAASE,IAAIA,CAACC,GAAG,EAAEL,OAAO,EAAEM,QAAQ,EAAEL,QAAQ,EAAE;EAC9C,IAAID,OAAO,CAACG,IAAI,EAAE;EAElBZ,EAAE,CAACgB,OAAO,CAACF,GAAG,EAAE,UAASH,GAAG,EAAEM,QAAQ,EAAE;IACtC,IAAIR,OAAO,CAACG,IAAI,EAAE;IAClB,IAAID,GAAG,EAAE,OAAOH,WAAW,CAACC,OAAO,EAAEC,QAAQ,EAAEC,GAAG,CAAC;IAEnD,IAAIO,QAAQ,GAAGD,QAAQ,CAACE,MAAM;IAE9BF,QAAQ,CAACG,OAAO,CAAC,UAASC,IAAI,EAAE;MAE9B,IAAIC,IAAI,GAAGpB,IAAI,CAACqB,IAAI,CAACT,GAAG,EAAEO,IAAI,CAAC;MAE/BrB,EAAE,CAACwB,IAAI,CAACF,IAAI,EAAE,UAASX,GAAG,EAAEc,KAAK,EAAE;QACjC,IAAIhB,OAAO,CAACG,IAAI,EAAE;QAClB,IAAID,GAAG,EAAE,OAAOH,WAAW,CAACC,OAAO,EAAEC,QAAQ,EAAEC,GAAG,CAAC;QAEnD,IAAIe,GAAG,GAAGX,QAAQ,CAACO,IAAI,EAAEG,KAAK,CAAC;QAC/B,IAAI,OAAOC,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,KAAK,EAAE;UAC7CjB,OAAO,CAACG,IAAI,GAAG,IAAI;UACnB,OAAOF,QAAQ,CAAC,CAAC;QACnB;QAEA,IAAIe,KAAK,CAACE,WAAW,CAAC,CAAC,IAAIlB,OAAO,CAACmB,SAAS,EAAE;UAE5C,OAAOf,IAAI,CAACS,IAAI,EAAEb,OAAO,EAAEM,QAAQ,EAAE,UAASJ,GAAG,EAAE;YACjD,IAAIF,OAAO,CAACG,IAAI,EAAE;YAClB,IAAID,GAAG,EAAE,OAAOH,WAAW,CAACC,OAAO,EAAEC,QAAQ,EAAEC,GAAG,CAAC;YAEnD,IAAI,EAAEO,QAAQ,KAAK,CAAC,EAAE;cACpBR,QAAQ,CAAC,CAAC;YACZ;UACF,CAAC,CAAC;QACJ;QACA,IAAI,EAAEQ,QAAQ,KAAK,CAAC,EAAE;UACpBR,QAAQ,CAAC,CAAC;QACZ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAGAmB,MAAM,CAACC,OAAO,GAAG,UAAShB,GAAG,EAAEL,OAAO,EAAEM,QAAQ,EAAEL,QAAQ,EAAE;EAE1D,IAAIqB,SAAS,CAACZ,MAAM,KAAK,CAAC,EAAE;IAC1BT,QAAQ,GAAGK,QAAQ;IACnBA,QAAQ,GAAGN,OAAO;IAClBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEAN,KAAK,CAACM,OAAO,EAAE;IACbmB,SAAS,EAAE,IAAI;IACfhB,IAAI,EAAE;EACR,CAAC,CAAC;EAEFC,IAAI,CAACC,GAAG,EAAEL,OAAO,EAAEM,QAAQ,EAAEL,QAAQ,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}