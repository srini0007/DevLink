{"ast":null,"code":"var common = require('./common.js');\nvar vs = require('./validators');\n\n//\n// Create Validator from schema\n//\nexports.fromJSON = function fromJSON(schema, context) {\n  var validator;\n  if (schema.type || schema.properties || schema.items) {\n    var type = schema.type;\n    // infer 'array' and 'object' type\n    if (schema.properties) type = 'object';\n    if (schema.items) type = 'array';\n    validator = new {\n      'boolean': vs.boolean,\n      'number': vs.number,\n      'integer': vs.integer,\n      'string': vs.string,\n      'any': vs.any,\n      'null': vs.null,\n      'array': vs.array,\n      'object': vs.object\n    }[type](context);\n  } else if (schema.enum) {\n    validator = new vs.enum(context);\n  } else if (schema.allOf) {\n    validator = new vs.allOf(context);\n  } else if (schema.anyOf) {\n    validator = new vs.anyOf(context);\n  } else if (schema.oneOf) {\n    validator = new vs.oneOf(context);\n  } else if (schema.$ref) {\n    validator = new vs.ref(context);\n  }\n  if (!validator) {\n    var err = new Error('Unkown schema');\n    err.schema = schema;\n    throw err;\n  }\n  return validator.fromJSON(schema);\n};\n\n//\n// create a default value from schema\n//\nmodule.exports.createValue = function createValue(schema) {\n  // convert jski object to schema\n  if (common.isObject(schema) && schema.__jski__) {\n    schema = schema.toJSON();\n  }\n  var hasDefaultValue = schema.hasOwnProperty('default');\n  var type = schema.type;\n  if (schema.enum) {\n    return hasDefaultValue ? schema.default : schema.enum[0];\n  }\n  if (schema.$ref) {\n    return hasDefaultValue ? schema.default : {};\n  }\n  // infer object and array\n  if (!schema.type) {\n    if (schema.properties) type = 'object';\n    if (schema.items) type = 'array';\n  }\n  if (!type) throw new Error('Cannot create default value for schema without type');\n  switch (type) {\n    case 'boolean':\n      return hasDefaultValue ? schema.default : true;\n    case 'integer':\n      return hasDefaultValue ? schema.default : 0;\n    case 'number':\n      return hasDefaultValue ? schema.default : 0;\n    case 'string':\n      return hasDefaultValue ? schema.default : '';\n    case 'object':\n      {\n        if (hasDefaultValue) return schema.default;\n        var obj = {};\n        if (typeof schema.properties === 'object') {\n          Object.keys(schema.properties).forEach(function (key) {\n            obj[key] = createValue(schema.properties[key]);\n          });\n        }\n        return obj;\n      }\n    case 'array':\n      return hasDefaultValue ? schema.default : [];\n    default:\n      throw new Error('Cannot create default value for unknown type: ' + type);\n  }\n};","map":{"version":3,"names":["common","require","vs","exports","fromJSON","schema","context","validator","type","properties","items","boolean","number","integer","string","any","null","array","object","enum","allOf","anyOf","oneOf","$ref","ref","err","Error","module","createValue","isObject","__jski__","toJSON","hasDefaultValue","hasOwnProperty","default","obj","Object","keys","forEach","key"],"sources":["C:/game/mern/node_modules/jski/lib/serialize.js"],"sourcesContent":["var common = require('./common.js');\nvar vs = require('./validators');\n\n\n//\n// Create Validator from schema\n//\nexports.fromJSON = function fromJSON(schema, context) {\n\n  var validator;\n\n  if (schema.type || schema.properties || schema.items) {\n\n    var type = schema.type;\n    // infer 'array' and 'object' type\n    if (schema.properties) type = 'object';\n    if (schema.items) type = 'array';\n\n    validator = new ({\n      'boolean': vs.boolean,\n      'number':  vs.number,\n      'integer': vs.integer,\n      'string':  vs.string,\n      'any':     vs.any,\n      'null':    vs.null,\n      'array':   vs.array,\n      'object':  vs.object\n    })[type](context);\n  }\n  else if (schema.enum) {\n    validator = new vs.enum(context);\n  }\n  else if (schema.allOf) {\n    validator = new vs.allOf(context);\n  }\n  else if (schema.anyOf) {\n    validator = new vs.anyOf(context);\n  }\n  else if (schema.oneOf) {\n    validator = new vs.oneOf(context);\n  }\n  else if (schema.$ref) {\n    validator = new vs.ref(context);\n  }\n\n  if (!validator) {\n    var err = new Error('Unkown schema');\n    err.schema = schema;\n    throw err;\n  }\n\n  return validator.fromJSON(schema);\n};\n\n\n//\n// create a default value from schema\n//\nmodule.exports.createValue = function createValue(schema) {\n\n  // convert jski object to schema\n  if (common.isObject(schema) && schema.__jski__) {\n    schema = schema.toJSON();\n  }\n\n  var hasDefaultValue = schema.hasOwnProperty('default');\n  var type = schema.type;\n\n  if (schema.enum) {\n    return hasDefaultValue ? schema.default : schema.enum[0];\n  }\n  if (schema.$ref) {\n    return hasDefaultValue ? schema.default : {};\n  }\n  // infer object and array\n  if (!schema.type) {\n    if (schema.properties) type = 'object';\n    if (schema.items) type = 'array';\n  }\n\n  if (!type) throw new Error('Cannot create default value for schema without type');\n\n  switch(type) {\n  case 'boolean': return hasDefaultValue ? schema.default : true;\n  case 'integer': return hasDefaultValue ? schema.default : 0;\n  case 'number': return hasDefaultValue ? schema.default : 0;\n  case 'string': return hasDefaultValue ? schema.default : '';\n  case 'object': {\n    if (hasDefaultValue) return schema.default;\n    var obj = {};\n    if (typeof schema.properties === 'object') {\n      Object.keys(schema.properties).forEach(function(key) {\n        obj[key] = createValue(schema.properties[key]);\n      });\n    }\n    return obj;\n  }\n  case 'array': return hasDefaultValue ? schema.default : [];\n  default: throw new Error('Cannot create default value for unknown type: ' + type);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}