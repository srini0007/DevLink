{"ast":null,"code":"var _jsxFileName = \"C:\\\\game\\\\mern\\\\frontend\\\\src\\\\component\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PostItem from './PostItem';\nimport AddPost from './AddPost';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPost } from '../../reducer/postSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const {\n    error,\n    posts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllPost());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hide post-error-head\",\n      children: (() => {\n        const element = [];\n        for (let i = 0; i < error.length; i++) {\n          element.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-error\",\n            children: [\" \", error[i]]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 30\n          }, this));\n        }\n        return element;\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-head\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-field\",\n      children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"T/5jvmhGT55n3BRBDugwHADRnXA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","PostItem","AddPost","useDispatch","useSelector","getAllPost","jsxDEV","_jsxDEV","Posts","_s","error","posts","state","post","dispatch","className","children","element","i","length","push","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/game/mern/frontend/src/component/posts/Posts.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport PostItem from './PostItem';\r\nimport AddPost from './AddPost';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPost } from '../../reducer/postSlice';\r\n\r\nfunction Posts() {\r\n    const {error,posts} = useSelector(state=>state.post);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getAllPost());\r\n    },[dispatch]);\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n        <div className=\"hide post-error-head\">\r\n        {\r\n        (()=>{\r\n            const element=[];\r\n            for(let i=0;i<error.length;i++){\r\n                element.push(<div key={i} className='post-error'> {error[i]}</div>)\r\n            }\r\n            return element;\r\n        })()}\r\n        </div>\r\n        <div className=\"post-head\">\r\n            Post\r\n        </div>\r\n        \r\n            <AddPost />\r\n        \r\n        <div className=\"post-field\" >\r\n            {posts?.map((post)=>(\r\n                <PostItem post={post} key={post._id}/>\r\n            ))\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAACC,KAAK;IAACC;EAAK,CAAC,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,IAAI,CAAC;EACpD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BH,SAAS,CAAC,MAAI;IACVc,QAAQ,CAACT,UAAU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAC,CAACS,QAAQ,CAAC,CAAC;EAEf,oBACEP,OAAA;IAAKQ,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBT,OAAA;MAAKQ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAErC,CAAC,MAAI;QACD,MAAMC,OAAO,GAAC,EAAE;QAChB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACR,KAAK,CAACS,MAAM,EAACD,CAAC,EAAE,EAAC;UAC3BD,OAAO,CAACG,IAAI,eAACb,OAAA;YAAaQ,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,GAAC,EAACN,KAAK,CAACQ,CAAC,CAAC;UAAA,GAApCA,CAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyC,CAAC,CAAC;QACvE;QACA,OAAOP,OAAO;MAClB,CAAC,EAAE;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjB,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAE3B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEFjB,OAAA,CAACL,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEfjB,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,GAAG,CAAEZ,IAAI,iBACbN,OAAA,CAACN,QAAQ;QAACY,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACa,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACf,EAAA,CAjCQD,KAAK;EAAA,QACYJ,WAAW,EAChBD,WAAW;AAAA;AAAAwB,EAAA,GAFvBnB,KAAK;AAmCd,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}