{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  posts: [],\n  error: [],\n  loading: true\n};\nconst postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    get_all_post(state, action) {\n      state.posts = action.payload;\n      state.loading = false;\n    },\n    post_error(state, action) {\n      state.loading = false;\n      if (action.payload === 'success') {\n        document.getElementsByClassName('post-error-head')[0].classList.add('hide');\n        return;\n      }\n      let n = action.payload.length;\n      state.error = [];\n      document.getElementsByClassName('post-error-head')[0].classList.remove('hide');\n      for (let i = 0; i < n; i++) {\n        state.error.push(action.payload[i].msg);\n      }\n    }\n  }\n});\nexport const {\n  get_all_post,\n  post_error\n} = postSlice.actions;\nexport default postSlice.reducer;\nexport function addPost(text) {\n  return async function addPostThunks(dispatch, getState) {\n    try {\n      let data = {\n        text: text\n      };\n      console.log(data);\n      const res = await axios.post('http://localhost:5000/api/post', data);\n      dispatch(post_error('success'));\n      dispatch(getAllPost());\n    } catch (err) {\n      console.log(err);\n      dispatch(post_error(err.response.data.errors));\n    }\n  };\n}\nexport function getAllPost() {\n  return async function getAllPostThunks(dispatch, getState) {\n    try {\n      const res = await axios.get('http://localhost:5000/api/post');\n      dispatch(get_all_post(res.data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function addLike(id) {\n  return async function addLikeThunks(dispatch, getState) {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/post/like/${id}`);\n      dispatch(getAllPost());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function addUnlike(id) {\n  return async function addUnikeThunks(dispatch, getState) {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/post/unlike/${id}`);\n      dispatch(getAllPost());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}","map":{"version":3,"names":["createSlice","axios","initialState","posts","error","loading","postSlice","name","reducers","get_all_post","state","action","payload","post_error","document","getElementsByClassName","classList","add","n","length","remove","i","push","msg","actions","reducer","addPost","text","addPostThunks","dispatch","getState","data","console","log","res","post","getAllPost","err","response","errors","getAllPostThunks","get","addLike","id","addLikeThunks","addUnlike","addUnikeThunks"],"sources":["C:/game/mern/frontend/src/reducer/postSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    error:[],\r\n    loading:true\r\n}\r\n\r\nconst postSlice = createSlice({\r\n    name:'post',\r\n    initialState,\r\n    reducers:{\r\n        get_all_post(state,action){\r\n            state.posts = action.payload;\r\n            state.loading=false;\r\n        },\r\n        post_error(state,action){\r\n            state.loading=false;\r\n            if(action.payload==='success'){\r\n                document.getElementsByClassName('post-error-head')[0].classList.add('hide');\r\n                return;\r\n            }\r\n            let n=action.payload.length;\r\n            state.error=[];\r\n            \r\n            document.getElementsByClassName('post-error-head')[0].classList.remove('hide');            \r\n            for(let i=0;i<n;i++){\r\n                state.error.push(action.payload[i].msg);   \r\n            }\r\n        }\r\n    }\r\n    \r\n});\r\nexport const {get_all_post,post_error} = postSlice.actions;\r\nexport default postSlice.reducer;\r\n\r\nexport function addPost(text){\r\n    return async function addPostThunks(dispatch,getState){\r\n        try{\r\n            let data={\r\n                text:text\r\n            };\r\n            console.log(data);\r\n            const res= await axios.post('http://localhost:5000/api/post',data);\r\n            dispatch(post_error('success'));\r\n            dispatch(getAllPost());\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            dispatch(post_error(err.response.data.errors));\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllPost(){\r\n    return async function getAllPostThunks(dispatch,getState){\r\n        try{\r\n            const res=await axios.get('http://localhost:5000/api/post');\r\n            dispatch(get_all_post(res.data));\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function addLike(id){\r\n    return async function addLikeThunks(dispatch,getState){\r\n        try{\r\n            const res=await axios.get(`http://localhost:5000/api/post/like/${id}`);\r\n            dispatch(getAllPost());\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport function addUnlike(id){\r\n    return async function addUnikeThunks(dispatch,getState){\r\n        try{\r\n            const res=await axios.get(`http://localhost:5000/api/post/unlike/${id}`);\r\n            dispatch(getAllPost());\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}