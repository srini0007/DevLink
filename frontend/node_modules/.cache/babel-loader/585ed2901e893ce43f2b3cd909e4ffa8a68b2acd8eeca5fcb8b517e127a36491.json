{"ast":null,"code":"var Validator = require('./validator.js');\nvar Constraint = require('./constraints.js').Constraint;\nvar common = require('./common.js');\n\n//\n// Boolean Validator\n//\n\nfunction BooleanValidator(context) {\n  Validator.call(this, context, 'boolean');\n  this.addCheck(function (value, options, path) {\n    return common.isBoolean(value) ? [] : [this.makeError('Value is not a boolean', 'boolean', path)];\n  });\n}\n;\ncommon.extend(BooleanValidator.prototype, Validator.prototype);\n\n//\n// Number Validator\n//\n\nfunction NumberValidator(context) {\n  Validator.call(this, context, 'number');\n  this.addConstraint(new Constraint('multipleOf', function (value, n, options, path) {\n    return value % n === 0 ? [] : [this.makeError('Value is not a multiple of: ' + n, 'multipleOf', path)];\n  }));\n  this.addConstraint(new Constraint('maximum', function (value, n, options, path) {\n    return value <= n ? [] : [this.makeError('Value is greater than the maximum: ' + n, 'maximum', path)];\n  }));\n  this.addConstraint(new Constraint('minimum', function (value, n, options, path) {\n    return value >= n ? [] : [this.makeError('Value is less than minimum: ' + n, 'minimum', path)];\n  }));\n  this.addCheck(function (value, options, path) {\n    return common.isNumber(value) ? [] : [this.makeError('Value is not a number', 'number', path)];\n  });\n}\n;\ncommon.extend(NumberValidator.prototype, Validator.prototype);\n\n//\n// Integer Validator\n//\n\nfunction IntegerValidator(context) {\n  NumberValidator.call(this, context, arguments);\n  this.type = 'integer';\n  this.addCheck(function (value, options, path) {\n    return Math.floor(value) === value ? [] : [this.makeError('Value is not an integer', 'integer', path)];\n  });\n}\n;\ncommon.extend(IntegerValidator.prototype, NumberValidator.prototype);\n\n//\n// StringValidator\n//\n\nfunction StringValidator(context) {\n  Validator.call(this, context, 'string');\n  this.addConstraint(new Constraint('maxLength', function (value, n, options, path) {\n    return value.length <= n ? [] : [this.makeError('Value is less than minimum: ' + n, 'maxLength', path)];\n  }));\n  this.addConstraint(new Constraint('minLength', function (value, n, options, path) {\n    return value.length >= n ? [] : [this.makeError('Value is less than minimum: ' + n, 'minLength', path)];\n  }));\n  this.addConstraint(new Constraint('pattern', function (value, p, options, path) {\n    return new RegExp(p).test(value) ? [] : [this.makeError('Value does not match pattern: ' + p, 'pattern', path)];\n  }));\n  this.addConstraint(new Constraint('format', function (value, f, options, path) {\n    if (!common.formats[f]) {\n      return [this.makeError('Unkown format: ' + f, 'format', path)];\n    }\n    if (!common.formats[f].test(value)) {\n      return [this.makeError('Value does not match format: ' + f, 'format', path)];\n    }\n    return [];\n  }));\n  this.addCheck(function (value, options, path) {\n    return common.isString(value) ? [] : [this.makeError('Value is not a string', 'string', path)];\n  });\n}\n;\ncommon.extend(StringValidator.prototype, Validator.prototype);\n\n//\n// Any Validator\n//\n\nfunction AnyValidator(context) {\n  Validator.call(this, context, 'any');\n}\n;\ncommon.extend(AnyValidator.prototype, Validator.prototype);\n\n//\n// Null Validator\n//\n\nfunction NullValidator(context) {\n  Validator.call(this, context, 'null');\n  this.addCheck(function (value, options, path) {\n    return common.isNull(value) ? [] : [this.makeError('Value is not null', 'null', path)];\n  });\n}\n;\ncommon.extend(NullValidator.prototype, Validator.prototype);\n\n//\n// exports\n//\n\nmodule.exports = {\n  BooleanValidator: BooleanValidator,\n  NumberValidator: NumberValidator,\n  IntegerValidator: IntegerValidator,\n  StringValidator: StringValidator,\n  AnyValidator: AnyValidator,\n  NullValidator: NullValidator\n};","map":{"version":3,"names":["Validator","require","Constraint","common","BooleanValidator","context","call","addCheck","value","options","path","isBoolean","makeError","extend","prototype","NumberValidator","addConstraint","n","isNumber","IntegerValidator","arguments","type","Math","floor","StringValidator","length","p","RegExp","test","f","formats","isString","AnyValidator","NullValidator","isNull","module","exports"],"sources":["C:/game/mern/node_modules/jski/lib/primitives.js"],"sourcesContent":["var Validator = require('./validator.js');\nvar Constraint = require('./constraints.js').Constraint;\nvar common = require('./common.js');\n\n\n//\n// Boolean Validator\n//\n\nfunction BooleanValidator(context) {\n\n  Validator.call(this, context, 'boolean');\n\n  this.addCheck(function(value, options, path) {\n    return common.isBoolean(value) ? [] : [\n      this.makeError('Value is not a boolean', 'boolean', path)\n    ];\n  });\n};\n\ncommon.extend(BooleanValidator.prototype, Validator.prototype);\n\n\n//\n// Number Validator\n//\n\nfunction NumberValidator(context) {\n\n  Validator.call(this, context, 'number');\n\n  this.addConstraint(new Constraint(\n    'multipleOf',\n    function(value, n, options, path) {\n      return value % n === 0 ? [] : [\n        this.makeError('Value is not a multiple of: ' + n, 'multipleOf', path)\n      ];\n    }\n  ));\n\n  this.addConstraint(new Constraint(\n    'maximum',\n    function(value, n, options, path) {\n      return value <= n ? [] : [\n        this.makeError('Value is greater than the maximum: ' + n, 'maximum', path)\n      ];\n    }\n  ));\n\n  this.addConstraint(new Constraint(\n    'minimum',\n    function(value, n, options, path) {\n      return value >= n ? [] : [\n        this.makeError('Value is less than minimum: ' + n, 'minimum', path)\n      ];\n    }\n  ));\n\n  this.addCheck(function(value, options, path) {\n    return common.isNumber(value) ? [] : [\n      this.makeError('Value is not a number', 'number', path)\n    ];\n  });\n};\n\ncommon.extend(NumberValidator.prototype, Validator.prototype);\n\n\n//\n// Integer Validator\n//\n\nfunction IntegerValidator(context) {\n\n  NumberValidator.call(this, context, arguments);\n  this.type = 'integer';\n\n  this.addCheck(function(value, options, path) {\n    return Math.floor(value) === value ? [] : [\n      this.makeError('Value is not an integer', 'integer', path)\n    ];\n  });\n};\n\n\ncommon.extend(IntegerValidator.prototype, NumberValidator.prototype);\n\n\n//\n// StringValidator\n//\n\nfunction StringValidator(context) {\n\n  Validator.call(this, context, 'string');\n\n  this.addConstraint(new Constraint(\n    'maxLength',\n    function(value, n, options, path) {\n      return value.length <= n ? [] : [\n        this.makeError('Value is less than minimum: ' + n, 'maxLength', path)\n      ];\n    }\n  ));\n\n  this.addConstraint(new Constraint(\n    'minLength',\n    function(value, n, options, path) {\n      return value.length >= n ? [] : [\n        this.makeError('Value is less than minimum: ' + n, 'minLength', path)\n      ];\n    }\n  ));\n\n  this.addConstraint(new Constraint(\n    'pattern',\n    function(value, p, options, path) {\n      return new RegExp(p).test(value) ? [] : [\n        this.makeError('Value does not match pattern: ' + p, 'pattern', path)\n      ];\n    }\n  ));\n\n  this.addConstraint(new Constraint(\n    'format',\n    function(value, f, options, path) {\n      if (!common.formats[f]) {\n        return [this.makeError('Unkown format: ' + f, 'format', path)];\n      }\n      if (!common.formats[f].test(value)) {\n        return [this.makeError('Value does not match format: ' + f, 'format', path)];\n      }\n      return [];\n    }\n  ));\n\n  this.addCheck(function(value, options, path) {\n    return common.isString(value) ? [] : [\n      this.makeError('Value is not a string', 'string', path)\n    ];\n  });\n};\n\ncommon.extend(StringValidator.prototype, Validator.prototype);\n\n\n//\n// Any Validator\n//\n\nfunction AnyValidator(context) {\n\n  Validator.call(this, context, 'any');\n};\n\ncommon.extend(AnyValidator.prototype, Validator.prototype);\n\n\n//\n// Null Validator\n//\n\nfunction NullValidator(context) {\n\n  Validator.call(this, context, 'null');\n\n  this.addCheck(function(value, options, path) {\n    return common.isNull(value) ? [] : [\n      this.makeError('Value is not null', 'null', path)\n    ];\n  });\n};\n\ncommon.extend(NullValidator.prototype, Validator.prototype);\n\n\n//\n// exports\n//\n\nmodule.exports = {\n  BooleanValidator: BooleanValidator,\n  NumberValidator: NumberValidator,\n  IntegerValidator: IntegerValidator,\n  StringValidator: StringValidator,\n  AnyValidator: AnyValidator,\n  NullValidator: NullValidator\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}